version: 2.1

# ----------------------------------
# Executors define the runtime environment
# ----------------------------------
executors:
  python-executor:
    docker:
      - image: cimg/python:3.10   # CircleCI's official Python image
    resource_class: medium

# ----------------------------------
# Jobs
# ----------------------------------
jobs:
  # 1️⃣ Lint job (code style checks)
  lint:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install linting packages
          command: |
            python -m pip install --upgrade pip
            pip install black flake8
      - run:
          name: Run Black format check
          command: black --check .
      - run:
          name: Run Flake8 lint check
          command: flake8 .

  # 2️⃣ Test job (unit tests)
  test:
    executor: python-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pip-cache-{{ checksum "requirements.txt" }}
            - v1-pip-cache-
      - run:
          name: Install dependencies
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Run unit tests
          command: |
            pytest --junitxml=results/junit.xml -q
      - store_test_results:
          path: results
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v1-pip-cache-{{ checksum "requirements.txt" }}

  # 3️⃣ Train job (builds ML model)
  train:
    executor: python-executor
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pip-cache-{{ checksum "requirements.txt" }}
            - v1-pip-cache-
      - run:
          name: Install dependencies for training
          command: pip install -r requirements.txt
      - run:
          name: Run model training script
          command: python src/train_model.py
      - persist_to_workspace:
          root: .
          paths:
            - models
      - store_artifacts:
          path: models
          destination: trained_models

  # 4️⃣ Package & Push Docker Image
  package_and_push:
    docker:
      - image: cimg/python:3.10
    steps:
      - attach_workspace:
          at: /workspace
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Copy trained model from workspace
          command: |
            mkdir -p models
            cp -r /workspace/models ./models || echo "⚠️ No models found, skipping copy"
      - run:
          name: Docker login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
      - run:
          name: Build Docker image
          command: |
            docker build -t ${DOCKERHUB_USER}/my-ml-app:${CIRCLE_SHA1} .
      - run:
          name: Push Docker image to Docker Hub
          command: |
            docker push ${DOCKERHUB_USER}/my-ml-app:${CIRCLE_SHA1}
      - store_artifacts:
          path: models
          destination: docker_build_artifacts

# ----------------------------------
# Workflow: define job order
# ----------------------------------
workflows:
  version: 2
  ci_pipeline:
    jobs:
      - lint
      - test:
          requires:
            - lint
      - train:
          requires:
            - test
      - package_and_push:
          requires:
            - train
